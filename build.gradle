buildscript {
	ext {
		springBootVersion = '3.1.7'
	}

	ext['spring-security.version']='6.3.0'

	repositories {
		mavenCentral()
	}

	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "io.spring.gradle:dependency-management-plugin:1.1.4"
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'pothole_solution'
	version = '0.0.1-SNAPSHOT'

	sourceCompatibility = '17'

	repositories {
		mavenCentral()
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'

		// validation
		implementation 'org.springframework.boot:spring-boot-starter-validation'

		// postgreSQL
		runtimeOnly 'org.postgresql:postgresql'

		// 쿼리 인자값 확인
		implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'

		// redis
		implementation 'org.springframework.boot:spring-boot-starter-data-redis'

		// spring session & security
		implementation("org.springframework.session:spring-session-data-redis")
		implementation 'org.springframework.boot:spring-boot-starter-security'

        // Point, Polygon 객체 사용
		implementation 'org.hibernate.orm:hibernate-spatial'

		// slack
		implementation("com.slack.api:bolt:1.39.0")
		implementation("com.slack.api:bolt-servlet:1.39.0")
		implementation("com.slack.api:bolt-jetty:1.39.0")


		//QueryDsl
		implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
		annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
		annotationProcessor "jakarta.annotation:jakarta.annotation-api"
		annotationProcessor "jakarta.persistence:jakarta.persistence-api"

		// s3
		implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.1.1")
		implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3'

		implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.3'
		implementation 'org.springframework.cloud:spring-cloud-commons:4.0.3'

		// kafka
		implementation 'org.apache.kafka:kafka-clients:3.5.1'
		implementation 'org.springframework.kafka:spring-kafka:3.0.7'
	}

	// QueryDSL 추가
	// QClass 위치 지정
	def generated = 'src/main/generated'

	// Gradle이 자바 컴파일 작업을 수행할 때, 생성된 QClass들을 해당 위치에 저장하도록 지시한다.
	tasks.withType(JavaCompile).configureEach {
		options.getGeneratedSourceOutputDirectory().set(file(generated))
	}

	// 개발 환경에서 생성된 Q 클래스를 사용할 수 있도록 java source set 에 querydsl QClass 위치 추가
	sourceSets {
		main.java.srcDirs += [ generated ]
	}

	// gradle clean 시에 QClass 디렉토리 삭제
	clean {
		delete file(generated)
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}
