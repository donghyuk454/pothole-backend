name: pothole Manager CD

on:
#  pull_request:
#    branches:
#      - 'develop'
#    types:
#      - closed
  push:
    branches: [ "develop", "**/manager/**" ]

jobs:
  deploy:
    #    if: github.event.pull_request.merged == true
#    if: contains(github.head_ref, 'manager') || contains(github.head_ref, 'core')
    name: deploy_manager
    runs-on: ubuntu-latest
    env:
      working-directory: ./pothole-manager-api

    steps:
      - name: Call build.yml
        uses: ./.github/workflows/build.yml

      - name: 현재 디렉토리 출력
        run: |
          echo ${{ github.workspace }}
          ls -l

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Manager Build, tag, and push the image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: pothole-dev
          IMAGE_TAG: ${{ github. sha }}

        run: |
          # Get current UTC time as image tag
          IMAGE_TAG=$(date -u +"%Y%m%dT%H%M%SZ")
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
               
          # Build a Docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

#      - name: EC2 접속, 컨테이너 종료, 삭제, 이미지 삭제
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.EC2_IP }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          script: |
#            sudo docker ps -q | xargs -r docker stop
#            sudo docker ps -asq | xargs -r docker rm
#            sudo docker images -q | xargs -r docker rmi
#            sudo docker system prune -af
#
#      - name: EC2에서 도커 이미지를 가져오기
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.EC2_IP }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          script: |
#            sudo docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#
#      - name: ECR에서 불러온 이미지를 도커에서 실행
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.EC2_IP }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          script: |
#            sudo docker stop pothole-manager || true
#            sudo docker rm pothole-manager || true
#            sudo docker run -d --name pothole-manager -p 8081:8081 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG